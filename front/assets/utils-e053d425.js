import{a as n}from"./axios-4a70c6fc.js";import{G as d}from"./utils-978ca1b9.js";var u=(t=>(t[t.INPUT=0]="INPUT",t[t.SELECT=1]="SELECT",t[t.CHECKBOX=2]="CHECKBOX",t[t.TEXTAREA=3]="TEXTAREA",t[t.RADIO=4]="RADIO",t[t.FILE=5]="FILE",t[t.SMART_SELECT=6]="SMART_SELECT",t[t.SCHEDULE=7]="SCHEDULE",t[t.COMBOBOX=8]="COMBOBOX",t))(u||{});const a="https://kusmirror.ru/api",_=20,f="https://kusmirror.ru";function w({login:t,password:e}){return new Promise(async(s,r)=>{try{const i=await n.post(`${a}/login`,{login:t,password:e});s(i.data.user)}catch(i){r(i)}})}function p({teacher_id:t}){return new Promise(async e=>{const s=await n.get(`${a}/get/if/journal_table[id,grade_id[name],subject_id[name]/teacher_id=${t}`);e(s.data.journal_tables.map(r=>({id:r.id,grade:r.grade.name,subject:r.subject.name})))})}function g({id:t}){return new Promise(async e=>{const s=await n.get(`${a}/get/if/journal_table[id,(lesson[id,theme_id[name],date_val,(mark[id,student_id,mark_value,lesson_id])),grade_id[id,name,(grade_student[student_id[*]])]]/id=${t}`),r=s.data.journal_tables[0].lessons,i=s.data.journal_tables[0].grade.grade_students.map(o=>o.student);e({lessons:r,grade:i})})}function $({mark:t}){return new Promise(async e=>{if(t.mark_value==="")t.id?await n.post(`${a}/drop/mark`,{id:t.id}):await n.post(`${a}/drop/mark`,{student_id:t.student_id,lesson_id:t.lesson_id}),e({student_id:t.student_id,lesson_id:t.lesson_id,mark_value:t.mark_value});else{const s=await n.post(`${a}/post/mark`,{...t});e({id:s.data,student_id:t.student_id,lesson_id:t.lesson_id,mark_value:t.mark_value})}})}function P(){return new Promise(async t=>{const e=await n.get(`${a}/get/all/user`);t(e.data.users)})}function A(t){return new Promise(async()=>{await n.post(`${a}/drop/user`,{id:t})})}function b(t){return new Promise(async e=>{await n.post(`${a}/post/user`,t),e(t)})}function j(t){return new Promise(async()=>{const e={file:t,filename:t.name,index:"data"};await n.post(`${a}/upload/user`,e,{headers:{"Content-Type":"multipart/form-data"}})})}function y(){return new Promise(async t=>{const e=await n.get(`${a}/get/all/plan`);t(e.data.plans)})}function S(t){return new Promise(async()=>{await n.post(`${a}/drop/plan`,{id:t})})}function h(){return new Promise(async t=>{const e=await n.get(`${a}/get/all/subject`);t(e.data.subjects)})}function C(t){return new Promise(async e=>{let s={name:t.name,subject_id:Number(t.subject_id)},r={};t.file&&(s.file=t.file,s.filename=t.file.name,s.index="data",r.headers={"Content-Type":"multipart/form-data"}),t.id&&(s.id=t.id),await n.post(`${a}/post/plan`,s,r),e()})}function G(){return new Promise(async t=>{let s=(await n.get(`${a}/get/all/grade[*,(grade_student)]`)).data.grades.map(r=>(r.student=r.grade_students.map(i=>i.student_id),delete r.grade_students,r));t(s)})}function E(t){return new Promise(async e=>{t.student&&(t.many_to_many="replace",t.student=t.student.map(s=>Number(s))),t.is_group=!1,t.head_id=Number(t.head_id),console.log(t),await n.post(`${a}/post/grade`,t),e()})}function L(t){return new Promise(async()=>{await n.post(`${a}/drop/grade`,{id:t})})}function q(){return new Promise(async t=>{const e=await n.get(`${a}/get/all/journal_table`);t(e.data.journal_tables)})}function I(t){return new Promise(async e=>{await n.post(`${a}/drop/journal_table`,{id:t}),e()})}function N(t){return new Promise(async e=>{await n.post(`${a}/post/subject`,t),e()})}function D(t){return new Promise(async e=>{await n.post(`${a}/drop/subject`,{id:t}),e()})}function F(t){return new Promise(async e=>{const s=await n.get(`${a}/print_journal/${t.join(",")}`);e(`https://kusmirror.ru/${s.data}`)})}function O(){return new Promise(async t=>{const e=d(),s=await n.get(`${a}/get/if/competition_user[competition_id[]]/user_id=${e.id}`);t(s.data.competition_users.map(r=>r.competition))})}function R(t){return new Promise(async e=>{const s=await n.get(`${a}/get/if/competition/id=${t}`),r=await n.get(`${a}/get/if/competition_question[question_id[id,name]]/competition_id=${t}`),i=s.data.competitions[0];i.questions=r.data.competition_questions.map(o=>o.question),e(i)})}function U(t){return new Promise(async e=>{const s=d(),i=(await n.get(`${a}/get_question/${t}/${s.id}`)).data.question;e(i)})}function v(t,e){return new Promise(async s=>{if(e==="")return;const r=d();await n.post(`${a}/post/answer`,{question_id:t,user_id:r.id,value:e}),s()})}function c(t){switch(t){case"FILE":return u.FILE;case"TEXTAREA":return u.TEXTAREA;default:throw new Error(`Unknown form type: ${t}`)}}function M(){return new Promise(async t=>{const s=(await n.get(`${a}/get/all/form[id,(field_form[field_id[]]),*]`)).data.forms;t(s.map(r=>({id:r.id,userName:r.userName,techName:r.techName,fields:r.field_forms.map(o=>({label:o.field.name,name:o.field.label,type:c(o.field.type),settings:{accept:c(o.field.type)==u.FILE?o.field.info:null}}))})))})}function X(t,e){return new Promise(async s=>{await n.post(`${a}/multitool`,{techName:t,...e},{headers:{"Content-Type":"multipart/form-data"}})})}function B(t){return new Promise(async(e,s)=>{try{await n.post(`${a}/registration`,t),e()}catch(r){s(r)}})}export{w as A,C,A as D,u as E,g as G,_ as M,F as P,B as R,$ as S,p as a,P as b,j as c,b as d,y as e,h as f,S as g,G as h,E as i,L as j,q as k,I as l,D as m,N as n,M as o,X as p,O as q,v as r,R as s,U as t,f as u};
